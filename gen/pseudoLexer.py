# Generated from pseudo.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\29")
        buf.write("\u0190\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6")
        buf.write("\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f")
        buf.write("\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25")
        buf.write("\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3")
        buf.write("!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)")
        buf.write("\3)\3*\3*\3*\3*\3+\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3/\3")
        buf.write("/\3/\3/\3/\3/\3/\3/\3\60\3\60\7\60\u0150\n\60\f\60\16")
        buf.write("\60\u0153\13\60\3\60\3\60\3\61\6\61\u0158\n\61\r\61\16")
        buf.write("\61\u0159\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\62\3\62\5\62\u0167\n\62\3\63\3\63\7\63\u016b\n\63\f")
        buf.write("\63\16\63\u016e\13\63\3\63\3\63\3\64\3\64\3\64\3\64\3")
        buf.write("\64\7\64\u0177\n\64\f\64\16\64\u017a\13\64\3\65\3\65\6")
        buf.write("\65\u017e\n\65\r\65\16\65\u017f\3\65\3\65\3\65\3\65\5")
        buf.write("\65\u0186\n\65\3\66\6\66\u0189\n\66\r\66\16\66\u018a\3")
        buf.write("\67\3\67\38\38\3\u016c\29\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63")
        buf.write("e\64g\65i\66k\67m8o9\3\2\6\4\2\f\f\17\17\5\2\13\f\17\17")
        buf.write("\"\"\3\2\62;\4\2C\\c|\2\u019a\2\3\3\2\2\2\2\5\3\2\2\2")
        buf.write("\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17")
        buf.write("\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3")
        buf.write("\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write("\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3")
        buf.write("\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2")
        buf.write("\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3")
        buf.write("\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E")
        buf.write("\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2")
        buf.write("O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2")
        buf.write("\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2")
        buf.write("\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2")
        buf.write("\2\2\2m\3\2\2\2\2o\3\2\2\2\3q\3\2\2\2\5x\3\2\2\2\7~\3")
        buf.write("\2\2\2\t\u0084\3\2\2\2\13\u008d\3\2\2\2\r\u0091\3\2\2")
        buf.write("\2\17\u0094\3\2\2\2\21\u0097\3\2\2\2\23\u009c\3\2\2\2")
        buf.write("\25\u00a3\3\2\2\2\27\u00a6\3\2\2\2\31\u00a9\3\2\2\2\33")
        buf.write("\u00ae\3\2\2\2\35\u00b4\3\2\2\2\37\u00bb\3\2\2\2!\u00c5")
        buf.write("\3\2\2\2#\u00c7\3\2\2\2%\u00cf\3\2\2\2\'\u00d4\3\2\2\2")
        buf.write(")\u00df\3\2\2\2+\u00e1\3\2\2\2-\u00e3\3\2\2\2/\u00e5\3")
        buf.write("\2\2\2\61\u00f3\3\2\2\2\63\u00ff\3\2\2\2\65\u0106\3\2")
        buf.write("\2\2\67\u010d\3\2\2\29\u0116\3\2\2\2;\u011a\3\2\2\2=\u011c")
        buf.write("\3\2\2\2?\u0120\3\2\2\2A\u0124\3\2\2\2C\u0126\3\2\2\2")
        buf.write("E\u0128\3\2\2\2G\u012a\3\2\2\2I\u012c\3\2\2\2K\u012e\3")
        buf.write("\2\2\2M\u0130\3\2\2\2O\u0132\3\2\2\2Q\u0134\3\2\2\2S\u0136")
        buf.write("\3\2\2\2U\u013a\3\2\2\2W\u013d\3\2\2\2Y\u013f\3\2\2\2")
        buf.write("[\u0141\3\2\2\2]\u0143\3\2\2\2_\u014d\3\2\2\2a\u0157\3")
        buf.write("\2\2\2c\u0166\3\2\2\2e\u0168\3\2\2\2g\u0171\3\2\2\2i\u0185")
        buf.write("\3\2\2\2k\u0188\3\2\2\2m\u018c\3\2\2\2o\u018e\3\2\2\2")
        buf.write("qr\7T\2\2rs\7G\2\2st\7R\2\2tu\7G\2\2uv\7C\2\2vw\7V\2\2")
        buf.write("w\4\3\2\2\2xy\7W\2\2yz\7P\2\2z{\7V\2\2{|\7K\2\2|}\7N\2")
        buf.write("\2}\6\3\2\2\2~\177\7Y\2\2\177\u0080\7J\2\2\u0080\u0081")
        buf.write("\7K\2\2\u0081\u0082\7N\2\2\u0082\u0083\7G\2\2\u0083\b")
        buf.write("\3\2\2\2\u0084\u0085\7G\2\2\u0085\u0086\7P\2\2\u0086\u0087")
        buf.write("\7F\2\2\u0087\u0088\7Y\2\2\u0088\u0089\7J\2\2\u0089\u008a")
        buf.write("\7K\2\2\u008a\u008b\7N\2\2\u008b\u008c\7G\2\2\u008c\n")
        buf.write("\3\2\2\2\u008d\u008e\7H\2\2\u008e\u008f\7Q\2\2\u008f\u0090")
        buf.write("\7T\2\2\u0090\f\3\2\2\2\u0091\u0092\7>\2\2\u0092\u0093")
        buf.write("\7/\2\2\u0093\16\3\2\2\2\u0094\u0095\7V\2\2\u0095\u0096")
        buf.write("\7Q\2\2\u0096\20\3\2\2\2\u0097\u0098\7U\2\2\u0098\u0099")
        buf.write("\7V\2\2\u0099\u009a\7G\2\2\u009a\u009b\7R\2\2\u009b\22")
        buf.write("\3\2\2\2\u009c\u009d\7G\2\2\u009d\u009e\7P\2\2\u009e\u009f")
        buf.write("\7F\2\2\u009f\u00a0\7H\2\2\u00a0\u00a1\7Q\2\2\u00a1\u00a2")
        buf.write("\7T\2\2\u00a2\24\3\2\2\2\u00a3\u00a4\7K\2\2\u00a4\u00a5")
        buf.write("\7P\2\2\u00a5\26\3\2\2\2\u00a6\u00a7\7K\2\2\u00a7\u00a8")
        buf.write("\7H\2\2\u00a8\30\3\2\2\2\u00a9\u00aa\7V\2\2\u00aa\u00ab")
        buf.write("\7J\2\2\u00ab\u00ac\7G\2\2\u00ac\u00ad\7P\2\2\u00ad\32")
        buf.write("\3\2\2\2\u00ae\u00af\7G\2\2\u00af\u00b0\7P\2\2\u00b0\u00b1")
        buf.write("\7F\2\2\u00b1\u00b2\7K\2\2\u00b2\u00b3\7H\2\2\u00b3\34")
        buf.write("\3\2\2\2\u00b4\u00b5\7T\2\2\u00b5\u00b6\7G\2\2\u00b6\u00b7")
        buf.write("\7E\2\2\u00b7\u00b8\7Q\2\2\u00b8\u00b9\7T\2\2\u00b9\u00ba")
        buf.write("\7F\2\2\u00ba\36\3\2\2\2\u00bb\u00bc\7G\2\2\u00bc\u00bd")
        buf.write("\7P\2\2\u00bd\u00be\7F\2\2\u00be\u00bf\7T\2\2\u00bf\u00c0")
        buf.write("\7G\2\2\u00c0\u00c1\7E\2\2\u00c1\u00c2\7Q\2\2\u00c2\u00c3")
        buf.write("\7T\2\2\u00c3\u00c4\7F\2\2\u00c4 \3\2\2\2\u00c5\u00c6")
        buf.write("\7<\2\2\u00c6\"\3\2\2\2\u00c7\u00c8\7G\2\2\u00c8\u00c9")
        buf.write("\7N\2\2\u00c9\u00ca\7U\2\2\u00ca\u00cb\7G\2\2\u00cb\u00cc")
        buf.write("\7\"\2\2\u00cc\u00cd\7K\2\2\u00cd\u00ce\7H\2\2\u00ce$")
        buf.write("\3\2\2\2\u00cf\u00d0\7G\2\2\u00d0\u00d1\7N\2\2\u00d1\u00d2")
        buf.write("\7U\2\2\u00d2\u00d3\7G\2\2\u00d3&\3\2\2\2\u00d4\u00d5")
        buf.write("\7U\2\2\u00d5\u00d6\7W\2\2\u00d6\u00d7\7D\2\2\u00d7\u00d8")
        buf.write("\7T\2\2\u00d8\u00d9\7Q\2\2\u00d9\u00da\7W\2\2\u00da\u00db")
        buf.write("\7V\2\2\u00db\u00dc\7K\2\2\u00dc\u00dd\7P\2\2\u00dd\u00de")
        buf.write("\7G\2\2\u00de(\3\2\2\2\u00df\u00e0\7*\2\2\u00e0*\3\2\2")
        buf.write("\2\u00e1\u00e2\7.\2\2\u00e2,\3\2\2\2\u00e3\u00e4\7+\2")
        buf.write("\2\u00e4.\3\2\2\2\u00e5\u00e6\7G\2\2\u00e6\u00e7\7P\2")
        buf.write("\2\u00e7\u00e8\7F\2\2\u00e8\u00e9\7U\2\2\u00e9\u00ea\7")
        buf.write("W\2\2\u00ea\u00eb\7D\2\2\u00eb\u00ec\7T\2\2\u00ec\u00ed")
        buf.write("\7Q\2\2\u00ed\u00ee\7W\2\2\u00ee\u00ef\7V\2\2\u00ef\u00f0")
        buf.write("\7K\2\2\u00f0\u00f1\7P\2\2\u00f1\u00f2\7G\2\2\u00f2\60")
        buf.write("\3\2\2\2\u00f3\u00f4\7t\2\2\u00f4\u00f5\7g\2\2\u00f5\u00f6")
        buf.write("\7x\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7c\2\2\u00f8\u00f9")
        buf.write("\7n\2\2\u00f9\u00fa\7a\2\2\u00fa\u00fb\7v\2\2\u00fb\u00fc")
        buf.write("\7{\2\2\u00fc\u00fd\7r\2\2\u00fd\u00fe\7g\2\2\u00fe\62")
        buf.write("\3\2\2\2\u00ff\u0100\7T\2\2\u0100\u0101\7G\2\2\u0101\u0102")
        buf.write("\7V\2\2\u0102\u0103\7W\2\2\u0103\u0104\7T\2\2\u0104\u0105")
        buf.write("\7P\2\2\u0105\64\3\2\2\2\u0106\u0107\7Q\2\2\u0107\u0108")
        buf.write("\7W\2\2\u0108\u0109\7V\2\2\u0109\u010a\7R\2\2\u010a\u010b")
        buf.write("\7W\2\2\u010b\u010c\7V\2\2\u010c\66\3\2\2\2\u010d\u010e")
        buf.write("\7E\2\2\u010e\u010f\7Q\2\2\u010f\u0110\7P\2\2\u0110\u0111")
        buf.write("\7U\2\2\u0111\u0112\7V\2\2\u0112\u0113\7C\2\2\u0113\u0114")
        buf.write("\7P\2\2\u0114\u0115\7V\2\2\u01158\3\2\2\2\u0116\u0117")
        buf.write("\7P\2\2\u0117\u0118\7Q\2\2\u0118\u0119\7V\2\2\u0119:\3")
        buf.write("\2\2\2\u011a\u011b\7/\2\2\u011b<\3\2\2\2\u011c\u011d\7")
        buf.write("O\2\2\u011d\u011e\7Q\2\2\u011e\u011f\7F\2\2\u011f>\3\2")
        buf.write("\2\2\u0120\u0121\7F\2\2\u0121\u0122\7K\2\2\u0122\u0123")
        buf.write("\7X\2\2\u0123@\3\2\2\2\u0124\u0125\7,\2\2\u0125B\3\2\2")
        buf.write("\2\u0126\u0127\7\61\2\2\u0127D\3\2\2\2\u0128\u0129\7-")
        buf.write("\2\2\u0129F\3\2\2\2\u012a\u012b\7>\2\2\u012bH\3\2\2\2")
        buf.write("\u012c\u012d\7@\2\2\u012dJ\3\2\2\2\u012e\u012f\7?\2\2")
        buf.write("\u012fL\3\2\2\2\u0130\u0131\7\u2262\2\2\u0131N\3\2\2\2")
        buf.write("\u0132\u0133\7\u2266\2\2\u0133P\3\2\2\2\u0134\u0135\7")
        buf.write("\u2267\2\2\u0135R\3\2\2\2\u0136\u0137\7C\2\2\u0137\u0138")
        buf.write("\7P\2\2\u0138\u0139\7F\2\2\u0139T\3\2\2\2\u013a\u013b")
        buf.write("\7Q\2\2\u013b\u013c\7T\2\2\u013cV\3\2\2\2\u013d\u013e")
        buf.write("\7]\2\2\u013eX\3\2\2\2\u013f\u0140\7_\2\2\u0140Z\3\2\2")
        buf.write("\2\u0141\u0142\7\60\2\2\u0142\\\3\2\2\2\u0143\u0144\7")
        buf.write("W\2\2\u0144\u0145\7U\2\2\u0145\u0146\7G\2\2\u0146\u0147")
        buf.write("\7T\2\2\u0147\u0148\7K\2\2\u0148\u0149\7P\2\2\u0149\u014a")
        buf.write("\7R\2\2\u014a\u014b\7W\2\2\u014b\u014c\7V\2\2\u014c^\3")
        buf.write("\2\2\2\u014d\u0151\7%\2\2\u014e\u0150\n\2\2\2\u014f\u014e")
        buf.write("\3\2\2\2\u0150\u0153\3\2\2\2\u0151\u014f\3\2\2\2\u0151")
        buf.write("\u0152\3\2\2\2\u0152\u0154\3\2\2\2\u0153\u0151\3\2\2\2")
        buf.write("\u0154\u0155\b\60\2\2\u0155`\3\2\2\2\u0156\u0158\t\3\2")
        buf.write("\2\u0157\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u0157")
        buf.write("\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u015b\3\2\2\2\u015b")
        buf.write("\u015c\b\61\2\2\u015cb\3\2\2\2\u015d\u015e\7V\2\2\u015e")
        buf.write("\u015f\7t\2\2\u015f\u0160\7w\2\2\u0160\u0167\7g\2\2\u0161")
        buf.write("\u0162\7H\2\2\u0162\u0163\7c\2\2\u0163\u0164\7n\2\2\u0164")
        buf.write("\u0165\7u\2\2\u0165\u0167\7g\2\2\u0166\u015d\3\2\2\2\u0166")
        buf.write("\u0161\3\2\2\2\u0167d\3\2\2\2\u0168\u016c\7$\2\2\u0169")
        buf.write("\u016b\13\2\2\2\u016a\u0169\3\2\2\2\u016b\u016e\3\2\2")
        buf.write("\2\u016c\u016d\3\2\2\2\u016c\u016a\3\2\2\2\u016d\u016f")
        buf.write("\3\2\2\2\u016e\u016c\3\2\2\2\u016f\u0170\7$\2\2\u0170")
        buf.write("f\3\2\2\2\u0171\u0178\5o8\2\u0172\u0177\5o8\2\u0173\u0177")
        buf.write("\7a\2\2\u0174\u0177\5k\66\2\u0175\u0177\5i\65\2\u0176")
        buf.write("\u0172\3\2\2\2\u0176\u0173\3\2\2\2\u0176\u0174\3\2\2\2")
        buf.write("\u0176\u0175\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3")
        buf.write("\2\2\2\u0178\u0179\3\2\2\2\u0179h\3\2\2\2\u017a\u0178")
        buf.write("\3\2\2\2\u017b\u017d\7\60\2\2\u017c\u017e\5k\66\2\u017d")
        buf.write("\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u017d\3\2\2\2")
        buf.write("\u017f\u0180\3\2\2\2\u0180\u0186\3\2\2\2\u0181\u0182\5")
        buf.write("k\66\2\u0182\u0183\7\60\2\2\u0183\u0184\5k\66\2\u0184")
        buf.write("\u0186\3\2\2\2\u0185\u017b\3\2\2\2\u0185\u0181\3\2\2\2")
        buf.write("\u0186j\3\2\2\2\u0187\u0189\5m\67\2\u0188\u0187\3\2\2")
        buf.write("\2\u0189\u018a\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b")
        buf.write("\3\2\2\2\u018bl\3\2\2\2\u018c\u018d\t\4\2\2\u018dn\3\2")
        buf.write("\2\2\u018e\u018f\t\5\2\2\u018fp\3\2\2\2\f\2\u0151\u0159")
        buf.write("\u0166\u016c\u0176\u0178\u017f\u0185\u018a\3\b\2\2")
        return buf.getvalue()


class pseudoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    COMMENT = 47
    WS = 48
    BOOL = 49
    STRING = 50
    IDENTIFIER = 51
    FLOAT = 52
    INT = 53
    DIGIT = 54
    LETTER = 55

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'REPEAT'", "'UNTIL'", "'WHILE'", "'ENDWHILE'", "'FOR'", "'<-'", 
            "'TO'", "'STEP'", "'ENDFOR'", "'IN'", "'IF'", "'THEN'", "'ENDIF'", 
            "'RECORD'", "'ENDRECORD'", "':'", "'ELSE IF'", "'ELSE'", "'SUBROUTINE'", 
            "'('", "','", "')'", "'ENDSUBROUTINE'", "'reveal_type'", "'RETURN'", 
            "'OUTPUT'", "'CONSTANT'", "'NOT'", "'-'", "'MOD'", "'DIV'", 
            "'*'", "'/'", "'+'", "'<'", "'>'", "'='", "'\u2260'", "'\u2264'", 
            "'\u2265'", "'AND'", "'OR'", "'['", "']'", "'.'", "'USERINPUT'" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT", "WS", "BOOL", "STRING", "IDENTIFIER", "FLOAT", "INT", 
            "DIGIT", "LETTER" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "COMMENT", "WS", "BOOL", "STRING", "IDENTIFIER", 
                  "FLOAT", "INT", "DIGIT", "LETTER" ]

    grammarFileName = "pseudo.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


