# Generated from /Users/cyruslinden/PycharmProjects/NEA/pseudo.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\28")
        buf.write("\u017c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4")
        buf.write("\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3")
        buf.write("\6\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 ")
        buf.write("\3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3")
        buf.write("(\3)\3)\3)\3)\3*\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3.\3")
        buf.write(".\3.\3.\3.\3.\3.\3/\3/\7/\u0142\n/\f/\16/\u0145\13/\3")
        buf.write("/\3/\3\60\6\60\u014a\n\60\r\60\16\60\u014b\3\60\3\60\3")
        buf.write("\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\5\61\u0159")
        buf.write("\n\61\3\62\3\62\5\62\u015d\n\62\3\63\3\63\3\63\3\63\7")
        buf.write("\63\u0163\n\63\f\63\16\63\u0166\13\63\3\64\3\64\6\64\u016a")
        buf.write("\n\64\r\64\16\64\u016b\3\64\3\64\3\64\3\64\5\64\u0172")
        buf.write("\n\64\3\65\6\65\u0175\n\65\r\65\16\65\u0176\3\66\3\66")
        buf.write("\3\67\3\67\2\28\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A")
        buf.write("\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65")
        buf.write("i\66k\67m8\3\2\6\4\2\f\f\17\17\5\2\13\f\17\17\"\"\3\2")
        buf.write("\62;\4\2C\\c|\2\u0185\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2")
        buf.write("\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2")
        buf.write("\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2")
        buf.write("\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!")
        buf.write("\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c")
        buf.write("\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2")
        buf.write("m\3\2\2\2\3o\3\2\2\2\5v\3\2\2\2\7|\3\2\2\2\t\u0082\3\2")
        buf.write("\2\2\13\u008b\3\2\2\2\r\u008f\3\2\2\2\17\u0092\3\2\2\2")
        buf.write("\21\u0095\3\2\2\2\23\u009a\3\2\2\2\25\u00a1\3\2\2\2\27")
        buf.write("\u00a4\3\2\2\2\31\u00a7\3\2\2\2\33\u00ac\3\2\2\2\35\u00b2")
        buf.write("\3\2\2\2\37\u00b9\3\2\2\2!\u00c3\3\2\2\2#\u00c5\3\2\2")
        buf.write("\2%\u00cd\3\2\2\2\'\u00d2\3\2\2\2)\u00dd\3\2\2\2+\u00df")
        buf.write("\3\2\2\2-\u00e1\3\2\2\2/\u00e3\3\2\2\2\61\u00f1\3\2\2")
        buf.write("\2\63\u00f8\3\2\2\2\65\u00ff\3\2\2\2\67\u0108\3\2\2\2")
        buf.write("9\u010c\3\2\2\2;\u010e\3\2\2\2=\u0112\3\2\2\2?\u0116\3")
        buf.write("\2\2\2A\u0118\3\2\2\2C\u011a\3\2\2\2E\u011c\3\2\2\2G\u011e")
        buf.write("\3\2\2\2I\u0120\3\2\2\2K\u0122\3\2\2\2M\u0124\3\2\2\2")
        buf.write("O\u0126\3\2\2\2Q\u0128\3\2\2\2S\u012c\3\2\2\2U\u012f\3")
        buf.write("\2\2\2W\u0131\3\2\2\2Y\u0133\3\2\2\2[\u0135\3\2\2\2]\u013f")
        buf.write("\3\2\2\2_\u0149\3\2\2\2a\u0158\3\2\2\2c\u015c\3\2\2\2")
        buf.write("e\u015e\3\2\2\2g\u0171\3\2\2\2i\u0174\3\2\2\2k\u0178\3")
        buf.write("\2\2\2m\u017a\3\2\2\2op\7T\2\2pq\7G\2\2qr\7R\2\2rs\7G")
        buf.write("\2\2st\7C\2\2tu\7V\2\2u\4\3\2\2\2vw\7W\2\2wx\7P\2\2xy")
        buf.write("\7V\2\2yz\7K\2\2z{\7N\2\2{\6\3\2\2\2|}\7Y\2\2}~\7J\2\2")
        buf.write("~\177\7K\2\2\177\u0080\7N\2\2\u0080\u0081\7G\2\2\u0081")
        buf.write("\b\3\2\2\2\u0082\u0083\7G\2\2\u0083\u0084\7P\2\2\u0084")
        buf.write("\u0085\7F\2\2\u0085\u0086\7Y\2\2\u0086\u0087\7J\2\2\u0087")
        buf.write("\u0088\7K\2\2\u0088\u0089\7N\2\2\u0089\u008a\7G\2\2\u008a")
        buf.write("\n\3\2\2\2\u008b\u008c\7H\2\2\u008c\u008d\7Q\2\2\u008d")
        buf.write("\u008e\7T\2\2\u008e\f\3\2\2\2\u008f\u0090\7>\2\2\u0090")
        buf.write("\u0091\7/\2\2\u0091\16\3\2\2\2\u0092\u0093\7V\2\2\u0093")
        buf.write("\u0094\7Q\2\2\u0094\20\3\2\2\2\u0095\u0096\7U\2\2\u0096")
        buf.write("\u0097\7V\2\2\u0097\u0098\7G\2\2\u0098\u0099\7R\2\2\u0099")
        buf.write("\22\3\2\2\2\u009a\u009b\7G\2\2\u009b\u009c\7P\2\2\u009c")
        buf.write("\u009d\7F\2\2\u009d\u009e\7H\2\2\u009e\u009f\7Q\2\2\u009f")
        buf.write("\u00a0\7T\2\2\u00a0\24\3\2\2\2\u00a1\u00a2\7K\2\2\u00a2")
        buf.write("\u00a3\7P\2\2\u00a3\26\3\2\2\2\u00a4\u00a5\7K\2\2\u00a5")
        buf.write("\u00a6\7H\2\2\u00a6\30\3\2\2\2\u00a7\u00a8\7V\2\2\u00a8")
        buf.write("\u00a9\7J\2\2\u00a9\u00aa\7G\2\2\u00aa\u00ab\7P\2\2\u00ab")
        buf.write("\32\3\2\2\2\u00ac\u00ad\7G\2\2\u00ad\u00ae\7P\2\2\u00ae")
        buf.write("\u00af\7F\2\2\u00af\u00b0\7K\2\2\u00b0\u00b1\7H\2\2\u00b1")
        buf.write("\34\3\2\2\2\u00b2\u00b3\7T\2\2\u00b3\u00b4\7G\2\2\u00b4")
        buf.write("\u00b5\7E\2\2\u00b5\u00b6\7Q\2\2\u00b6\u00b7\7T\2\2\u00b7")
        buf.write("\u00b8\7F\2\2\u00b8\36\3\2\2\2\u00b9\u00ba\7G\2\2\u00ba")
        buf.write("\u00bb\7P\2\2\u00bb\u00bc\7F\2\2\u00bc\u00bd\7T\2\2\u00bd")
        buf.write("\u00be\7G\2\2\u00be\u00bf\7E\2\2\u00bf\u00c0\7Q\2\2\u00c0")
        buf.write("\u00c1\7T\2\2\u00c1\u00c2\7F\2\2\u00c2 \3\2\2\2\u00c3")
        buf.write("\u00c4\7<\2\2\u00c4\"\3\2\2\2\u00c5\u00c6\7G\2\2\u00c6")
        buf.write("\u00c7\7N\2\2\u00c7\u00c8\7U\2\2\u00c8\u00c9\7G\2\2\u00c9")
        buf.write("\u00ca\7\"\2\2\u00ca\u00cb\7K\2\2\u00cb\u00cc\7H\2\2\u00cc")
        buf.write("$\3\2\2\2\u00cd\u00ce\7G\2\2\u00ce\u00cf\7N\2\2\u00cf")
        buf.write("\u00d0\7U\2\2\u00d0\u00d1\7G\2\2\u00d1&\3\2\2\2\u00d2")
        buf.write("\u00d3\7U\2\2\u00d3\u00d4\7W\2\2\u00d4\u00d5\7D\2\2\u00d5")
        buf.write("\u00d6\7T\2\2\u00d6\u00d7\7Q\2\2\u00d7\u00d8\7W\2\2\u00d8")
        buf.write("\u00d9\7V\2\2\u00d9\u00da\7K\2\2\u00da\u00db\7P\2\2\u00db")
        buf.write("\u00dc\7G\2\2\u00dc(\3\2\2\2\u00dd\u00de\7*\2\2\u00de")
        buf.write("*\3\2\2\2\u00df\u00e0\7.\2\2\u00e0,\3\2\2\2\u00e1\u00e2")
        buf.write("\7+\2\2\u00e2.\3\2\2\2\u00e3\u00e4\7G\2\2\u00e4\u00e5")
        buf.write("\7P\2\2\u00e5\u00e6\7F\2\2\u00e6\u00e7\7U\2\2\u00e7\u00e8")
        buf.write("\7W\2\2\u00e8\u00e9\7D\2\2\u00e9\u00ea\7T\2\2\u00ea\u00eb")
        buf.write("\7Q\2\2\u00eb\u00ec\7W\2\2\u00ec\u00ed\7V\2\2\u00ed\u00ee")
        buf.write("\7K\2\2\u00ee\u00ef\7P\2\2\u00ef\u00f0\7G\2\2\u00f0\60")
        buf.write("\3\2\2\2\u00f1\u00f2\7T\2\2\u00f2\u00f3\7G\2\2\u00f3\u00f4")
        buf.write("\7V\2\2\u00f4\u00f5\7W\2\2\u00f5\u00f6\7T\2\2\u00f6\u00f7")
        buf.write("\7P\2\2\u00f7\62\3\2\2\2\u00f8\u00f9\7Q\2\2\u00f9\u00fa")
        buf.write("\7W\2\2\u00fa\u00fb\7V\2\2\u00fb\u00fc\7R\2\2\u00fc\u00fd")
        buf.write("\7W\2\2\u00fd\u00fe\7V\2\2\u00fe\64\3\2\2\2\u00ff\u0100")
        buf.write("\7E\2\2\u0100\u0101\7Q\2\2\u0101\u0102\7P\2\2\u0102\u0103")
        buf.write("\7U\2\2\u0103\u0104\7V\2\2\u0104\u0105\7C\2\2\u0105\u0106")
        buf.write("\7P\2\2\u0106\u0107\7V\2\2\u0107\66\3\2\2\2\u0108\u0109")
        buf.write("\7P\2\2\u0109\u010a\7Q\2\2\u010a\u010b\7V\2\2\u010b8\3")
        buf.write("\2\2\2\u010c\u010d\7/\2\2\u010d:\3\2\2\2\u010e\u010f\7")
        buf.write("O\2\2\u010f\u0110\7Q\2\2\u0110\u0111\7F\2\2\u0111<\3\2")
        buf.write("\2\2\u0112\u0113\7F\2\2\u0113\u0114\7K\2\2\u0114\u0115")
        buf.write("\7X\2\2\u0115>\3\2\2\2\u0116\u0117\7,\2\2\u0117@\3\2\2")
        buf.write("\2\u0118\u0119\7\61\2\2\u0119B\3\2\2\2\u011a\u011b\7-")
        buf.write("\2\2\u011bD\3\2\2\2\u011c\u011d\7>\2\2\u011dF\3\2\2\2")
        buf.write("\u011e\u011f\7@\2\2\u011fH\3\2\2\2\u0120\u0121\7?\2\2")
        buf.write("\u0121J\3\2\2\2\u0122\u0123\7\u2262\2\2\u0123L\3\2\2\2")
        buf.write("\u0124\u0125\7\u2266\2\2\u0125N\3\2\2\2\u0126\u0127\7")
        buf.write("\u2267\2\2\u0127P\3\2\2\2\u0128\u0129\7C\2\2\u0129\u012a")
        buf.write("\7P\2\2\u012a\u012b\7F\2\2\u012bR\3\2\2\2\u012c\u012d")
        buf.write("\7Q\2\2\u012d\u012e\7T\2\2\u012eT\3\2\2\2\u012f\u0130")
        buf.write("\7]\2\2\u0130V\3\2\2\2\u0131\u0132\7_\2\2\u0132X\3\2\2")
        buf.write("\2\u0133\u0134\7\60\2\2\u0134Z\3\2\2\2\u0135\u0136\7W")
        buf.write("\2\2\u0136\u0137\7U\2\2\u0137\u0138\7G\2\2\u0138\u0139")
        buf.write("\7T\2\2\u0139\u013a\7K\2\2\u013a\u013b\7P\2\2\u013b\u013c")
        buf.write("\7R\2\2\u013c\u013d\7W\2\2\u013d\u013e\7V\2\2\u013e\\")
        buf.write("\3\2\2\2\u013f\u0143\7%\2\2\u0140\u0142\n\2\2\2\u0141")
        buf.write("\u0140\3\2\2\2\u0142\u0145\3\2\2\2\u0143\u0141\3\2\2\2")
        buf.write("\u0143\u0144\3\2\2\2\u0144\u0146\3\2\2\2\u0145\u0143\3")
        buf.write("\2\2\2\u0146\u0147\b/\2\2\u0147^\3\2\2\2\u0148\u014a\t")
        buf.write("\3\2\2\u0149\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u0149")
        buf.write("\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014d\3\2\2\2\u014d")
        buf.write("\u014e\b\60\2\2\u014e`\3\2\2\2\u014f\u0150\7V\2\2\u0150")
        buf.write("\u0151\7t\2\2\u0151\u0152\7w\2\2\u0152\u0159\7g\2\2\u0153")
        buf.write("\u0154\7H\2\2\u0154\u0155\7c\2\2\u0155\u0156\7n\2\2\u0156")
        buf.write("\u0157\7u\2\2\u0157\u0159\7g\2\2\u0158\u014f\3\2\2\2\u0158")
        buf.write("\u0153\3\2\2\2\u0159b\3\2\2\2\u015a\u015d\5i\65\2\u015b")
        buf.write("\u015d\5g\64\2\u015c\u015a\3\2\2\2\u015c\u015b\3\2\2\2")
        buf.write("\u015dd\3\2\2\2\u015e\u0164\5m\67\2\u015f\u0163\5m\67")
        buf.write("\2\u0160\u0163\7a\2\2\u0161\u0163\5c\62\2\u0162\u015f")
        buf.write("\3\2\2\2\u0162\u0160\3\2\2\2\u0162\u0161\3\2\2\2\u0163")
        buf.write("\u0166\3\2\2\2\u0164\u0162\3\2\2\2\u0164\u0165\3\2\2\2")
        buf.write("\u0165f\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0169\7\60\2")
        buf.write("\2\u0168\u016a\5i\65\2\u0169\u0168\3\2\2\2\u016a\u016b")
        buf.write("\3\2\2\2\u016b\u0169\3\2\2\2\u016b\u016c\3\2\2\2\u016c")
        buf.write("\u0172\3\2\2\2\u016d\u016e\5i\65\2\u016e\u016f\7\60\2")
        buf.write("\2\u016f\u0170\5i\65\2\u0170\u0172\3\2\2\2\u0171\u0167")
        buf.write("\3\2\2\2\u0171\u016d\3\2\2\2\u0172h\3\2\2\2\u0173\u0175")
        buf.write("\5k\66\2\u0174\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176")
        buf.write("\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177j\3\2\2\2\u0178")
        buf.write("\u0179\t\4\2\2\u0179l\3\2\2\2\u017a\u017b\t\5\2\2\u017b")
        buf.write("n\3\2\2\2\f\2\u0143\u014b\u0158\u015c\u0162\u0164\u016b")
        buf.write("\u0171\u0176\3\b\2\2")
        return buf.getvalue()


class pseudoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    COMMENT = 46
    WS = 47
    BOOL = 48
    NUM = 49
    IDENTIFIER = 50
    FLOAT = 51
    INT = 52
    DIGIT = 53
    LETTER = 54

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'REPEAT'", "'UNTIL'", "'WHILE'", "'ENDWHILE'", "'FOR'", "'<-'", 
            "'TO'", "'STEP'", "'ENDFOR'", "'IN'", "'IF'", "'THEN'", "'ENDIF'", 
            "'RECORD'", "'ENDRECORD'", "':'", "'ELSE IF'", "'ELSE'", "'SUBROUTINE'", 
            "'('", "','", "')'", "'ENDSUBROUTINE'", "'RETURN'", "'OUTPUT'", 
            "'CONSTANT'", "'NOT'", "'-'", "'MOD'", "'DIV'", "'*'", "'/'", 
            "'+'", "'<'", "'>'", "'='", "'\u2260'", "'\u2264'", "'\u2265'", 
            "'AND'", "'OR'", "'['", "']'", "'.'", "'USERINPUT'" ]

    symbolicNames = [ "<INVALID>",
            "COMMENT", "WS", "BOOL", "NUM", "IDENTIFIER", "FLOAT", "INT", 
            "DIGIT", "LETTER" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "COMMENT", "WS", "BOOL", "NUM", "IDENTIFIER", 
                  "FLOAT", "INT", "DIGIT", "LETTER" ]

    grammarFileName = "pseudo.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


